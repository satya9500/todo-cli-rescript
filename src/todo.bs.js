// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Sys = require("bs-platform/lib/js/sys.js");
var Caml_array = require("bs-platform/lib/js/caml_array.js");

var getToday = (function() {
  let date = new Date();
  return new Date(date.getTime() - (date.getTimezoneOffset() * 60000))
    .toISOString()
    .split("T")[0];
});

var help_string = "Usage :-\n$ ./todo add \"todo item\"  # Add a new todo\n$ ./todo ls               # Show remaining todos\n$ ./todo del NUMBER       # Delete a todo\n$ ./todo done NUMBER      # Complete a todo\n$ ./todo help             # Show usage\n$ ./todo report           # Statistics";

function cmdHelp(param) {
  console.log(help_string);
  
}

function cmdLs(param) {
  console.log("List todos");
  
}

function cmdAddTodo(todo) {
  console.log("Add todo: " + todo);
  
}

function cmdDelTodo(id) {
  console.log("Del todo: " + id);
  
}

function cmdMarkDone(id) {
  console.log("Mark Done: " + id);
  
}

function cmdReport(param) {
  console.log("Report");
  
}

var isValid = Sys.argv.length === 3 || Sys.argv.length === 4;

var cases;

if (isValid) {
  var command = Caml_array.get(Sys.argv, 2);
  var arg = "";
  if (Sys.argv.length === 4) {
    arg = Caml_array.get(Sys.argv, 3);
  }
  switch (command) {
    case "add" :
        cases = cmdAddTodo(arg);
        break;
    case "del" :
        cases = cmdDelTodo(arg);
        break;
    case "done" :
        cases = cmdMarkDone(arg);
        break;
    case "help" :
        console.log(help_string);
        cases = undefined;
        break;
    case "ls" :
        console.log("List todos");
        cases = undefined;
        break;
    case "report" :
        console.log("Report");
        cases = undefined;
        break;
    default:
      console.log(help_string);
      cases = undefined;
  }
} else {
  console.log(help_string);
  cases = undefined;
}

var encoding = "utf8";

var pending_todos_file = "todo.txt";

var completed_todos_file = "done.txt";

var argv = Sys.argv;

exports.getToday = getToday;
exports.encoding = encoding;
exports.pending_todos_file = pending_todos_file;
exports.completed_todos_file = completed_todos_file;
exports.help_string = help_string;
exports.cmdHelp = cmdHelp;
exports.cmdLs = cmdLs;
exports.cmdAddTodo = cmdAddTodo;
exports.cmdDelTodo = cmdDelTodo;
exports.cmdMarkDone = cmdMarkDone;
exports.cmdReport = cmdReport;
exports.argv = argv;
exports.isValid = isValid;
exports.cases = cases;
/* isValid Not a pure module */
